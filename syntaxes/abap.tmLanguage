<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>fileTypes</key>
		<array>
			<string>abap</string>
			<string>ABAP</string>
		</array>
		<key>foldingStartMarker</key>
		<string>/\*\*|\{\s*$</string>
		<key>foldingStopMarker</key>
		<string>\*\*/|^\s*\}</string>
		<key>keyEquivalent</key>
		<string>^~A</string>
		<key>name</key>
		<string>ABAP</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.abap</string>
					</dict>
				</dict>
				<key>match</key>
				<string>^\*.*\n?</string>
				<key>name</key>
				<string>comment.line.full.abap</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.abap</string>
					</dict>
				</dict>
				<key>match</key>
				<string>".*\n?</string>
				<key>name</key>
				<string>comment.line.partial.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;![^\s])##.*?(?=([\.:,\s]))</string>
				<key>name</key>
				<string>comment.line.pragma.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)([a-z_/][a-z_0-9/]*)(?=\s+=\s+)</string>
				<key>name</key>
				<string>variable.other.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b[0-9]+(\b|\.|,)</string>
				<key>name</key>
				<string>constant.numeric.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?ix)(^|\s+)((PUBLIC|PRIVATE|PROTECTED)\sSECTION)(?=\s+|:|\.)</string>
				<key>name</key>
				<string>storage.modifier.class.abap</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;!\\)(\|)(.*?)</string>
				<key>end</key>
				<string>(?&lt;!\\)(\|)</string>
				<key>name</key>
				<string>string.interpolated.abap</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</dict>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>({ )|( })</string>
						<key>name</key>
						<string>constant.character.escape</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?&lt;={ ).*?(?= })</string>
						<key>name</key>
						<string>variable.other.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\\\|</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>'</string>
				<key>end</key>
				<string>'</string>
				<key>name</key>
				<string>string.quoted.single.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>''</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>`</string>
				<key>end</key>
				<string>`</string>
				<key>name</key>
				<string>string.quoted.single.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>``</string>
						<key>name</key>
						<string>constant.character.escape.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?i)^\s*(class)\s([a-z_/][a-z_0-9/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.block.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>name</key>
				<string>meta.block.begin.implementation.abap</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(^|\s+)(definition|implementation|public|inheriting\s+from|final|deferred|abstract|shared\s+memory\s+enabled|(global|local)*\s*friends|(create\s+(public|protected|private))|for\s+testing|risk\s+level\s+(critical|dangerous|harmless))|duration\s(short|medium|long)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.class.abap</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
						<key>contentName</key>
						<string>entity.name.type.block.abap</string>
						<key>end</key>
						<string>(?![A-Za-z0-9_])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#generic_names</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(method)\s(?:([a-z_\/][a-z_0-9\/]*)~)?([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(BY\s+DATABASE(\s+PROCEDURE|\s+FUNCTION))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(FOR\s+(HDB|LLANG))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=\s)(OPTIONS\s+(READ-ONLY|DETERMINISTIC|SUPPRESS\s+SYNTAX\s+ERRORS))(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(LANGUAGE\s+SQLSCRIPT)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=\s)(USING)\s+([a-z_\/][a-z_0-9\/]*)+(?=\s+|\.)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.method.abap</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
						<key>end</key>
						<string>(?![A-Za-z0-9_])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#generic_names</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(INTERFACE)\s([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(DEFERRED|PUBLIC)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.method.abap</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?ix)^\s*(FORM)\s([a-z_\/][a-z_0-9\/]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.block.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.abap</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*\.\s*\n?</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?ix)(?&lt;=^|\s)(USING|TABLES|CHANGING|RAISING)(?=\s+|\.)</string>
						<key>name</key>
						<string>storage.modifier.form.abap</string>
					</dict>
					<dict>
					<key>include</key>
					<string>#abaptypes</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(endclass|endmethod|endform|endinterface)</string>
				<key>name</key>
				<string>storage.type.block.end.abap</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(&lt;[A-Za-z_][A-Za-z0-9_]*&gt;)</string>
				<key>name</key>
				<string>variable.other.field.symbol.abap</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#keywords</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#abap_constants</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#reserved_names</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#operators</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#builtin_functions</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#abaptypes</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#system_fields</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>abap_constants</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(initial|null|space|abap_true|abap_false|table_line)(?=\s|\.|,)</string>
				<key>name</key>
				<string>constant.language.abap</string>
			</dict>
			<key>reserved_names</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(me|super)(?=\s|\.|,|-&gt;)</string>
				<key>name</key>
				<string>constant.language.abap</string>
			</dict>
			<key>abaptypes</key>
			<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?ix)\s(abap_bool|string|xstring|any|clike|csequence|numeric|xsequence|c|n|i|p|f|d|t|x)(?=\s|\.|,)</string>
					<key>name</key>
					<string>support.type.abap</string>	
				</dict>
				<dict>
					<key>match</key>
					<string>(?ix)\s(TYPE|REF|TO|STANDARD|SORTED|HASHED|INDEX|TABLE|WITH|UNIQUE|NON-UNIQUE|SECONDARY|DEFAULT|KEY)(?=\s|\.|,)</string>
					<key>name</key>
					<string>keyword.control.simple.abap</string>
				</dict>
			</array>
			</dict>
			<key>arithmetic_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(\+|\-|\*|\*\*|/|%|DIV|MOD|BIT-AND|BIT-OR|BIT-XOR|BIT-NOT)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>comparison_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(&lt;|&gt;|&lt;\=|&gt;\=|\=|&lt;&gt;|eq|ne|lt|le|gt|ge|cs|cp)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>control_keywords</key>
			<dict>
				<key>match</key>
				<string>(?ix)(^|\s)(
	        at|case|catch|continue|do|elseif|else|endat|endcase|enddo|endif|
	        endloop|endon|if|loop|on|raise|try)(?=\s|\.|:)</string>
				<key>name</key>
				<string>keyword.control.flow.abap</string>
			</dict>
			<key>generic_names</key>
			<dict>
				<key>match</key>
				<string>[A-Za-z_][A-Za-z0-9_]*</string>
			</dict>
			<key>keywords</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#main_keywords</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#control_keywords</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#keywords_followed_by_braces</string>
					</dict>
				</array>
			</dict>
			<key>logical_operator</key>
			<dict>
				<key>match</key>
				<string>(?i)(?&lt;=\s)(not|or|and)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>system_fields</key>
			<dict>
				<key>match</key>
				<string>(?ix)\b(sy-)(abcde|batch|binpt|calld|callr|colno|cpage|cprog|cucol|curow|datar|datlo|datum|dayst|dbcnt|dbnam|dbsysc|dyngr|dynnr|fdayw|fdpos|host|index|langu|ldbpg|lilli|linct|linno|linsz|lisel|listi|loopc|lsind|macol|mandt|marow|modno|msgid|msgli|msgno|msgty|msgv[1-4]|opsysc|pagno|pfkey|repid|saprl|scols|slset|spono|srows|staco|staro|stepl|subrc|sysid|tabix|tcode|tfill|timlo|title|tleng|tvar[0-9]|tzone|ucomm|uline|uname|uzeit|vline|wtitl|zonlo)(?=\.|\s)</string>
				<key>name</key>
				<string>variable.language.abap</string>
			</dict>
			<key>main_keywords</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=^|\s)(
	        abstract|add|add-corresponding|adjacent|alias|aliases|all|append|appending|ascending|as|assert|assign|assigned|assigning|association|authority-check|
	        back|begin|binary|block|bound|break-point|by|byte|
	        call|cast|changing|check|class-data|class-events|class-method|class-methods|class-pool|clear|close|cnt|collect|commit|comment|cond|character|
	        corresponding|communication|component|compute|concatenate|condense|constants|conv|count|
	        controls|convert|create|currency|
	        data|descending|default|define|deferred|delete|describe|destination|detail|display|divide|divide-corresponding|display-mode|duplicates|
	        deleting|
	        editor-call|empty|end|endexec|endfunction|ending|endmodule|end-of-definition|end-of-page|end-of-selection|end-test-injection|end-test-seam|exit-command|
	        endprovide|endselect|endtry|endwhile|enum|event|events|exec|exit|export|
	        exporting|extract|exception|exceptions|
	        field-symbols|field-groups|field|first|fetch|fields|format|frame|free|from|function|find|for|found|function-pool|
	        generate|get|
	        handle|handler|hide|hashed|header|help-request|
	        include|import|importing|index|infotypes|initial|initialization|
	        id|implemented|is|in|interface|interfaces|interface-pool|intervals|init|input|insert|instance|into|
			key|
	        left-justified|leave|like|line|lines|line-count|line-size|load|local|log-point|length|left|leading|lower|
	        matchcode|method|mesh|message|message-id|methods|modify|module|move|move-corresponding|multiply|multiply-corresponding|match|modif|
			new|new-line|new-page|new-section|next|no|no-display|no-gap|no-gaps|no-sign|no-zero|non-unique|number|
	        occurrence|object|obligatory|of|output|overlay|optional|others|occurrences|occurs|offset|options|
	        pack|parameters|partially|perform|places|position|print-control|private|program|protected|provide|public|put|
	        radiobutton\s+group|raising|range|ranges|receive|receiving|redefinition|reduce|reference|refresh|regex|reject|results|requested|
	        ref|replace|report|reserve|restore|result\s+xml|return|returning|right-justified|rollback|read|read-only|rp-provide-from-last|run|
	        scan|screen|scroll|search|select|select-options|selection-screen|stamp|source|subkey|
	        separated|set|shift|single|skip|sort|sorted|split|standard|stamp|starting|start-of-selection|sum|subtract-corresponding|statics|step|stop|structure|submatches|submit|subtract|summary|supplied|suppress|section|syntax-check|syntax-trace|system-call|switch|
	        tables|table|task|testing|test-seam|test-injection|then|time|times|title|titlebar|to|top-of-page|trailing|transfer|transformation|translate|transporting|types|type|type-pool|type-pools|
	        unassign|unique|uline|unpack|update|upper|using|user-command|
	        value|value-request|
	        when|while|window|write|where|with|work|
		xml)(?=\s|\.|:|,)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>keywords_followed_by_braces</key>
			<dict>
				<key>match</key>
				<string>(?ix)\b(data|value|field-symbol)\((&lt;?[a-z_\/][a-z_0-9\/]*&gt;?)\)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.simple.abap</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.other.abap</string>
					</dict>
				</dict>
			</dict>
			<key>operators</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#other_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#arithmetic_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comparison_operator</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#logical_operator</string>
					</dict>
				</array>
			</dict>
			<key>other_operator</key>
			<dict>
				<key>match</key>
				<string>(?&lt;=\s)(&amp;&amp;|\?=|\+=|-=|\/=|\*=|&amp;&amp;=)(?=\s)</string>
				<key>name</key>
				<string>keyword.control.simple.abap</string>
			</dict>
			<key>builtin_functions</key>
			<dict>
				<key>match</key>
				<string>(?ix)(?&lt;=\s)(abs|sign|ceil|floor|trunc|frac|acos|asin|atan|cos|sin|tan|cosh|sinh|tanh|exp|log|log10|sqrt|strlen|xstrlen|charlen|lines|numofchar|dbmaxlen|round|rescale|nmax|nmin|cmax|cmin|boolc|boolx|xsdbool|contains|contains_any_of|contains_any_not_of|matches|line_exists|ipow|char_off|count|count_any_of|count_any_not_of|distance|condense|concat_lines_of|escape|find|find_end|find_any_of|find_any_not_of|insert|match|repeat|replace|reverse|segment|shift_left|shift_right|substring|substring_after|substring_from|substring_before|substring_to|to_upper|to_lower|to_mixed|from_mixed|translate|bit-set|line_index)(?=\()</string>
				<key>name</key>
				<string>entity.name.function.builtin.abap</string>
			</dict>
		</dict>
		<key>scopeName</key>
		<string>source.abap</string>
		<key>uuid</key>
		<string>0357FFB4-EFFF-4DE9-8371-B0F9C8DF1B21</string>
	</dict>
</plist>
